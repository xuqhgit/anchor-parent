<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd">
	
	<!--连接池配置-->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.pool.maxTotal}" />
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		<property name="minIdle" value="${redis.pool.minIdle}" />
		<property name="numTestsPerEvictionRun" value="${redis.pool.numTestsPerEvictionRun}" />
		<property name="timeBetweenEvictionRunsMillis" value="${redis.pool.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${redis.pool.minEvictableIdleTimeMillis}" />
	
		<property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}" />
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
	</bean>
	<!--Sentinel配置-->
	<bean id="redisSentinelConfiguration"
	          class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
		<constructor-arg index="0" value="${redis.master}"/>
		<constructor-arg index="1">
			<set>
				<!--可配置多个-->
				<value>${redis.sentinel.host-1}:${redis.sentinel.port-1}</value>
			</set>
		</constructor-arg>
	</bean>
	
	<!--连接工厂-->
	<bean id="jedisConnectionFactory"  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
	>
		<constructor-arg name="sentinelConfig" ref="redisSentinelConfiguration"/>
		<constructor-arg name="poolConfig" ref="poolConfig" />
		<property name="database" value="${redis.database}"></property>
	</bean>
	
	<!-- 缓存序列化方式 -->
	<bean id="keySerializer"
		class="org.springframework.data.redis.serializer.StringRedisSerializer" />
	<bean id="valueSerializer"
		class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />
	<!-- 缓存 -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
		<property name="keySerializer" ref="keySerializer" />
		<property name="valueSerializer" ref="valueSerializer" />
		<property name="hashKeySerializer" ref="keySerializer" />
		<property name="hashValueSerializer" ref="valueSerializer" />
    </bean>

	<bean id="redisCache" class="com.anchor.core.cache.RedisCache">
		<property name="redisTemplate" ref="redisTemplate"></property>
	</bean>
	<!-- 缓存管理 配合spring EnableCaching 使用 -->
	<bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
		<constructor-arg index="0" ref="redisTemplate" />
		<property name="defaultExpiration" value="${redis.expiration}" />
	</bean> 
</beans>